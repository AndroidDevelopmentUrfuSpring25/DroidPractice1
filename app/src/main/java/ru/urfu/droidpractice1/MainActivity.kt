package ru.urfu.droidpractice1

import android.content.Intent
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.result.contract.ActivityResultContracts
import androidx.activity.viewModels
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import coil.compose.rememberAsyncImagePainter

class MainActivity : ComponentActivity() {
    private val viewModel: ArticleViewModel by viewModels()

    private val startSecondArticle = registerForActivityResult(
        ActivityResultContracts.StartActivityForResult()
    ) { result ->
        if (result.resultCode == RESULT_OK) {
            viewModel.setArticleRead(result.data?.getBooleanExtra("isRead", false) ?: false)
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            MaterialTheme {
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    ArticleScreen(
                        onNavigateToSecondArticle = {
                            startSecondArticle.launch(Intent(this, SecondActivity::class.java))
                        },
                        viewModel = viewModel
                    )
                }
            }
        }
    }
}

@Composable
fun ArticleScreen(
    onNavigateToSecondArticle: () -> Unit,
    viewModel: ArticleViewModel
) {
    val context = LocalContext.current
    val likes by viewModel.likes.collectAsState()
    val dislikes by viewModel.dislikes.collectAsState()
    val isArticleRead by viewModel.isArticleRead.collectAsState()
    
    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp)
            .verticalScroll(rememberScrollState())
    ) {
        Text(
            text = "–î—É–≥–ª–∞—Å –∑–∞—Å—Ç—Ä—è–ª –º–µ–∂–¥—É —Å–±–æ—Ä–Ω—ã–º–∏ –ë—Ä–∞–∑–∏–ª–∏–∏ –∏ –†–æ—Å—Å–∏–∏. –ü–æ–¥ —É–≥—Ä–æ–∑–æ–π –ª–µ–≥–∏–æ–Ω–µ—Ä—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å ¬´–ó–µ–Ω–∏—Ç–∞¬ª",
            style = MaterialTheme.typography.headlineMedium,
            fontWeight = FontWeight.Bold,
            modifier = Modifier.padding(bottom = 16.dp)
        )

        Image(
            painter = rememberAsyncImagePainter("https://img.championat.com/s/732x488/news/big/k/q/duglas-santos_17410168551046676303.jpg"),
            contentDescription = "–î—É–≥–ª–∞—Å –°–∞–Ω—Ç–æ—Å",
            modifier = Modifier
                .fillMaxWidth()
                .height(200.dp)
                .padding(bottom = 16.dp)
        )

        Text(
            text = "–£ –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–Ω–æ–≤–∞ —Å–º–µ–Ω–∏—Ç—å –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ.",
            style = MaterialTheme.typography.titleMedium,
            fontWeight = FontWeight.Medium,
            modifier = Modifier.padding(bottom = 8.dp)
        )

        Text(
            text = "–°–±–æ—Ä–Ω–∞—è –†–æ—Å—Å–∏–∏ –æ–±—ä—è–≤–∏–ª–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –Ω–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å–±–æ—Ä. –í —Å–ø–∏—Å–æ–∫ –ø–æ–ø–∞–ª –∑–∞—â–∏—Ç–Ω–∏–∫ ¬´–ó–µ–Ω–∏—Ç–∞¬ª –î—É–≥–ª–∞—Å –°–∞–Ω—Ç–æ—Å ‚Äî —ç—Ç–æ –µ–≥–æ –ø–µ—Ä–≤–æ–µ –ø–æ–¥–æ–±–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ.\n\n" +
                    "–î—É–≥–ª–∞—Å –∏–≥—Ä–∞–µ—Ç –∑–∞ ¬´–ó–µ–Ω–∏—Ç¬ª —Å 2019 –≥–æ–¥–∞. –í –æ–∫—Ç—è–±—Ä–µ 2024-–≥–æ –±—Ä–∞–∑–∏–ª–µ—Ü –ø–æ–ª—É—á–∏–ª —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç, –∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–¥–µ–ª—å –±—Ä–∞–∑–∏–ª—å—Ü–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ —Å—á–∏—Ç–∞—Ç—å –ª–µ–≥–∏–æ–Ω–µ—Ä–æ–º. ¬´–§–ò–§–ê —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∞ –∑–∞—è–≤–ª–µ–Ω–∏–µ –∫–ª—É–±–∞ –∏ –ø—Ä–∏–Ω—è–ª–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–∞. –°–∏–Ω–µ‚Äë–±–µ–ª–æ‚Äë–≥–æ–ª—É–±—ã–µ –ø–æ–ª—É—á–∏–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –†–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ —Å–æ—é–∑–∞ ‚Äî —Å —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –î—É–≥–ª–∞—Å –°–∞–Ω—Ç–æ—Å –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ª–µ–≥–∏–æ–Ω–µ—Ä–æ–º¬ª, ‚Äî –≥–ª–∞—Å–∏–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ ¬´–ó–µ–Ω–∏—Ç–∞¬ª.",
            style = MaterialTheme.typography.bodyLarge,
            modifier = Modifier.padding(bottom = 16.dp)
        )

        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(vertical = 8.dp),
            horizontalArrangement = Arrangement.SpaceEvenly
        ) {
            Button(
                onClick = { viewModel.incrementLikes() },
                colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.primary)
            ) {
                Text("üëç $likes")
            }
            
            Button(
                onClick = { viewModel.incrementDislikes() },
                colors = ButtonDefaults.buttonColors(containerColor = MaterialTheme.colorScheme.error)
            ) {
                Text("üëé $dislikes")
            }
        }

        Button(
            onClick = {
                val shareIntent = Intent().apply {
                    action = Intent.ACTION_SEND
                    putExtra(Intent.EXTRA_TEXT, "–î—É–≥–ª–∞—Å –∑–∞—Å—Ç—Ä—è–ª –º–µ–∂–¥—É —Å–±–æ—Ä–Ω—ã–º–∏ –ë—Ä–∞–∑–∏–ª–∏–∏ –∏ –†–æ—Å—Å–∏–∏. –ü–æ–¥ —É–≥—Ä–æ–∑–æ–π –ª–µ–≥–∏–æ–Ω–µ—Ä—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å ¬´–ó–µ–Ω–∏—Ç–∞¬ª")
                    type = "text/plain"
                }
                context.startActivity(Intent.createChooser(shareIntent, "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"))
            },
            modifier = Modifier
                .fillMaxWidth()
                .padding(vertical = 8.dp)
        ) {
            Text("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è")
        }

        Button(
            onClick = onNavigateToSecondArticle,
            modifier = Modifier
                .fillMaxWidth()
                .padding(vertical = 8.dp)
        ) {
            Text(if (isArticleRead) "–í—Ç–æ—Ä–∞—è —Å—Ç–∞—Ç—å—è –ø—Ä–æ—á–∏—Ç–∞–Ω–∞" else "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞—Ç—å–µ")
        }

        if (isArticleRead) {
            Text(
                text = "–í—Ç–æ—Ä–∞—è —Å—Ç–∞—Ç—å—è –ø—Ä–æ—á–∏—Ç–∞–Ω–∞",
                style = MaterialTheme.typography.bodyMedium,
                color = MaterialTheme.colorScheme.primary,
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(top = 8.dp),
                textAlign = TextAlign.Center
            )
        }
    }
}